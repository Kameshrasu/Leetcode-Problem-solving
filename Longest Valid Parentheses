// Given a string containing just the characters '(' and ')', return the length of the longest valid (well-formed) parentheses substring.
import java.util.Stack;

class Solution {
    public int longestValidParentheses(String s) {
        Stack<Integer> stack = new Stack<>();
        stack.push(-1); 
        int maxLength = 0;

        for (int i = 0; i < s.length(); i++) {
            char element = s.charAt(i);
            if (element == '(') {
                stack.push(i); 
            } else {
                stack.pop(); 
                if (stack.isEmpty()) {
                    stack.push(i); 
                } else {
                  
                    maxLength = Math.max(maxLength, i - stack.peek());
                }
            }
        }

        return maxLength;
    }
}
